{"ast":null,"code":"var _jsxFileName = \"/Users/gpipada/Desktop/Http Request Learning/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-http-practise-88791-default-rtdb.firebaseio.com/movies.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      // fetch('https://swapi.dev/api/films/').then(response => {\n      //   return response.json();\n      // }).then((data) => {\n\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  function addMovieHandler(movie) {\n    fetch('https://react-http-practise-88791-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie)\n    });\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 21\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QQ817o21IMUXijyGtDb1BGBylwg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","addMovieHandler","movie","method","body","JSON","stringify","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["/Users/gpipada/Desktop/Http Request Learning/src/App.js"],"sourcesContent":["import React ,{useState,useCallback,useEffect} from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n\n  const [movies,setMovies]=useState([]);\n  const [isLoading,setIsLoading]=useState(false);\n  const [error,setError]=useState(null);\n\n\n      const fetchMoviesHandler = useCallback(async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n          const response = await fetch('https://react-http-practise-88791-default-rtdb.firebaseio.com/movies.json');\n          if (!response.ok) {\n            throw new Error('Something went wrong!');\n          }\n    \n          const data = await response.json();\n             // fetch('https://swapi.dev/api/films/').then(response => {\n            //   return response.json();\n            // }).then((data) => {\n    \n          const transformedMovies = data.results.map((movieData) => {\n            return {\n              id: movieData.episode_id,\n              title: movieData.title,\n              openingText: movieData.opening_crawl,\n              releaseDate: movieData.release_date,\n            };\n          });\n          setMovies(transformedMovies);\n        } catch (error) {\n          setError(error.message);\n        }\n        setIsLoading(false);\n      }, []);\n\n      useEffect(() => {\n        fetchMoviesHandler();\n      }, [fetchMoviesHandler]);\n\n\n      function addMovieHandler(movie) {\n          fetch('https://react-http-practise-88791-default-rtdb.firebaseio.com/movies.json',{\n            method:'POST',\n            body: JSON.stringify(movie)\n          });\n  }\n\n\n      let content = <p>Found no movies.</p>;\n\n      if (movies.length > 0) {\n        content = <MoviesList movies={movies} />;\n      }\n    \n      if (error) {\n        content = <p>{error}</p>;\n      }\n    \n      if (isLoading) {\n        content = <p>Loading...</p>;\n      }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler}/>\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}